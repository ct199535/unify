@model IEnumerable<UniFi.Models.Product>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .textc {
        color: whitesmoke;
    }

</style>

<nav class="navbar navbar-expand-lg navbar-dark" style="background-color: rgba(1, 69, 148, 1); margin: 10px; border-radius: 8px;">
  <!-- Container wrapper -->
  <div class="container-fluid">
    <!-- Toggle button -->
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCenteredExample" aria-controls="navbarCenteredExample" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <!-- Collapsible wrapper -->
    <div
      class="collapse navbar-collapse justify-content-center"
      id="navbarCenteredExample"
    >
      <!-- Left links -->
      <ul class="navbar-nav mb-2 mb-lg-0">
        <li class="nav-item">
          <a class="nav-link" href="@Url.Action("BrandDashboard", "Profiles")">Dashboard</a>
        </li>

        <li class="nav-item">
          <a class="nav-link active" aria-current="page"  href="#">Products</a>
        </li>

        <li class="nav-item">
          <a class="nav-link" href="@Url.Action("Edit", "Brands")">Settings</a>
        </li>

        <li class="nav-item">
          <a class="nav-link" href="@Url.Action("Edit", "Profiles")">Details</a>
        </li>
        
      </ul>
      <!-- Left links -->
    </div>
    <!-- Collapsible wrapper -->
  </div>
  <!-- Container wrapper -->
</nav>

<h1 class="textc">Products</h1>

<p>
    <a asp-action="Create" class="btn btn-primary" style="background-color: #215BA0">Create New</a>
</p>

<div class="p-2" style="background-color: #0C072A; border-radius: 16px; margin: 10px;">
<table class="table" style="color: white;">
    <thead>
        <tr>
            @*<th>
                @Html.DisplayNameFor(model => model.UserId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Brand)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Image)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Service)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Disabled)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            @*<td>
                @Html.HiddenFor(modelItem => item.UserId)
            </td>
            <td>
                @Html.HiddenFor(modelItem => item.Brand)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Image)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Service)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Disabled)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
</div>